{{- $services := dict -}}

{{- /* Collect services from ingressRoutes */ -}}
{{- range .Values.ingressRoutes }}
  {{- $ns := default $.Release.Namespace .namespace }}
  {{- range .routes }}
    {{- range .services }}
      {{- $key := printf "%s/%s" $ns .name }}

      {{- if not (hasKey $services $key) }}
        {{- $_ := set $services $key (dict "name" .name "namespace" $ns "externalName" .externalName "ports" (list)) }}
      {{- end }}

      {{- $svc := index $services $key }}
      {{- $ports := get $svc "ports" }}

      {{- $exists := false }}
      {{- range $p := $ports }}
        {{- if eq $p.port .port }}
          {{- $exists = true }}
        {{- end }}
      {{- end }}

      {{- if not $exists }}
        {{- $ports = append $ports (dict "port" .port "targetPort" .port) }}
        {{- $_ := set $svc "ports" $ports }}
        {{- $_ := set $services $key $svc }}
      {{- end }}
    {{- end }}
  {{- end }}
{{- end }}

{{- /* Collect services from classicIngresses */ -}}
{{- range .Values.classicIngresses }}
  {{- $ns := default $.Release.Namespace .namespace }}
  {{- range .services }}
    {{- $key := printf "%s/%s" $ns .name }}

    {{- if not (hasKey $services $key) }}
      {{- $_ := set $services $key (dict "name" .name "namespace" $ns "externalName" .externalName "ports" (list)) }}
    {{- end }}

    {{- $svc := index $services $key }}
    {{- $ports := get $svc "ports" }}

    {{- $exists := false }}
    {{- range $p := $ports }}
      {{- if eq $p.port .port }}
        {{- $exists = true }}
      {{- end }}
    {{- end }}

    {{- if not $exists }}
      {{- $ports = append $ports (dict "port" .port "targetPort" .port) }}
      {{- $_ := set $svc "ports" $ports }}
      {{- $_ := set $services $key $svc }}
    {{- end }}
  {{- end }}
{{- end }}

{{- /* Output all unique Services with all ports */ -}}
{{- range $key, $svc := $services }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $svc.name }}
  namespace: {{ $svc.namespace }}
spec:
  type: ExternalName
  externalName: {{ $svc.externalName }}
  ports:
    {{- range $svc.ports }}
    - port: {{ .port }}
      targetPort: {{ .targetPort }}
    {{- end }}
{{- end }}