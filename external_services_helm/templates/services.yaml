{{- $services := dict -}}

{{- /* Helper to add service port with serviceName + ports as port name */ -}}
{{- define "addPort" -}}
  {{- $svcMap := index . 0 -}}
  {{- $ns := index . 1 -}}
  {{- $svc := index . 2 -}}          {{/* service dict from values */}}

  {{- /* default targetPort to port if missing */ -}}
  {{- $targetPort := default $svc.port $svc.targetPort }}

  {{- /* Build port name as: serviceName-port-targetPort */ -}}
  {{- $portNameRaw := printf "%s-%s-%s" $svc.name (toString $svc.port) (toString $targetPort) }}
  {{- $portName := $portNameRaw | lower | trimSuffix "-" }}

  {{- $key := printf "%s/%s" $ns $svc.name }}

  {{- if not (hasKey $svcMap $key) }}
    {{- $_ := set $svcMap $key (dict "name" $svc.name "namespace" $ns "externalName" $svc.externalName "ports" (list) "insecureSkipVerify" false) }}
  {{- end }}

  {{- $existingSvc := index $svcMap $key }}
  {{- $ports := get $existingSvc "ports" }}

  {{- $exists := false }}
  {{- range $p := $ports }}
    {{- if and (eq $p.port $svc.port) (eq $p.targetPort $targetPort) (eq $p.name $portName) }}
      {{- $exists = true }}
    {{- end }}
  {{- end }}

  {{- if not $exists }}
    {{- $ports = append $ports (dict "port" $svc.port "targetPort" $targetPort "name" $portName) }}
    {{- $_ := set $existingSvc "ports" $ports }}
  {{- end }}

  {{- /* Merge insecureSkipVerify: if any instance has it true, keep it true */ -}}
  {{- if $svc.insecureSkipVerify }}
    {{- $_ := set $existingSvc "insecureSkipVerify" true }}
  {{- end }}

  {{- $_ := set $svcMap $key $existingSvc }}
{{- end }}

{{- /* Collect from ingressRoutes */ -}}
{{- range .Values.ingressRoutes }}
  {{- $ns := default $.Release.Namespace .namespace }}
  {{- range .routes }}
    {{- range .services }}
        {{- include "addPort" (list $services $ns .) }}
    {{- end }}
  {{- end }}
{{- end }}

{{- /* Collect from classicIngresses */ -}}
{{- range .Values.classicIngresses }}
  {{- $ns := default $.Release.Namespace .namespace }}
  {{- range .services }}
      {{- include "addPort" (list $services $ns .) }}
  {{- end }}
{{- end }}

{{- /* Render services */ -}}
{{- range $key, $svc := $services }}
---
apiVersion: v1
kind: Service
metadata:
  {{- if $svc.insecureSkipVerify }}
  annotations:
    traefik.ingress.kubernetes.io/service.serverstransport: {{ $svc.namespace }}-{{ $svc.namespace }}-insecureSkipVerify@kubernetescrd
  {{- end }}
  name: {{ $svc.name }}
  namespace: {{ $svc.namespace }}
spec:
  type: ExternalName
  externalName: {{ $svc.externalName }}
  ports:
    {{- range $svc.ports }}
    - name: {{ .name }}
      port: {{ .port }}
      targetPort: {{ .targetPort }}
    {{- end }}
{{- end }}
